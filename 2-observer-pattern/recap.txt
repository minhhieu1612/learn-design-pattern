Định nghĩa:
    The Observer Pattern defines a one-to-many dependency between objects so that when one object
    changes state, all of its dependents are notified and updated automatically.

    Hay: Mẫu Observer xác định một phụ thuộc một-nhiều giữa các đối tượng để khi một đối tượng thay 
    đổi trạng thái, tất cả phụ thuộc của nó được thông báo và tự động cập nhật.

Chúng ta cần: 
    1, 1 interface được xác định là họ.
    2, các lớp con thuật toán(2) implement họ(1).
    3, tạo 1 private(đóng gói) instance kiểu họ(1) ở lớp cha và 1 setter(3) để 
    có thể thay đổi các lớp con(2).
    4, sử dụng lại ở các lớp con(2) bằng cách khởi tạo lớp cha và dùng setter(3) đã nói

Một vài nguyên lý:
    1, Strive for loosely coupled designs between objects that interact.
    Hay: Cố gắng tạo ra các thiết kế liên kết lỏng lẻo giữa các đối tượng tương tác.

    2, Program to an interface, not an implementation
    Hay: Lập trình với một interface, không phải một lớp con.

    3, Favor composition over inheritance
    Hay: Sử dụng việc kết hợp hơn là kế thừa