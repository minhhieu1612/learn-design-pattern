Định nghĩa:
    The Strategy Pattern defines a family of algorithms, encapsulates each one,and makes them 
    interchangeable. Strategy lets the algorithm vary independently from clients that use it.

    Hay: Mẫu Strategy xác định một họ các thuật toán, gói gọn từng cái và làm cho chúng có thể hoán đổi 
    cho nhau. Strategy cho phép thuật toán thay đổi độc lập với các client sử dụng nó.

Chúng ta cần:
    1, 1 interface được xác định là họ.
    2, các lớp con thuật toán(2) implement họ(1).
    3, tạo 1 private(đóng gói) instance kiểu họ(1) ở lớp cha và 1 setter(3) để 
    có thể thay đổi các lớp con(2).
    4, sử dụng lại ở các lớp con(2) bằng cách khởi tạo lớp cha và dùng setter(3) đã nói

Một vài nguyên lý:
    1, Identify the aspects of your application that vary and separate them from what stays the same
    Hay: Xác định các khía cạnh khác nhau của ứng dụng của bạn và tách chúng ra khỏi những khía cạnh 
    vẫn giữ nguyên

    2, Program to an interface, not an implementation
    Hay: Lập trình với một interface, không phải một lớp con.

    3, Favor composition over inheritance
    Hay: Sử dụng việc kết hợp hơn là kế thừa